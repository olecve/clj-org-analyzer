{:deps {org.clojure/clojure {:mvn/version "1.9.0"}
        clojure.java-time/clojure.java-time {:mvn/version "1.4.2"}
        http-kit/http-kit {:mvn/version "2.3.0"}
        ring/ring {:mvn/version "1.7.1"}
        compojure/compojure {:mvn/version "1.6.1"}
        com.taoensso/tufte {:mvn/version "2.1.0-RC4"}}

 :paths ["src" "resources"]

 :aliases {:graal-prep
           {:extra-paths ["dev"]
            :main-opts ["-m" "org-analyzer.graal-resource-indexer"]}

           :http-server
           {:main-opts ["-m" "org-analyzer.main"]}

           :dev {:extra-paths ["dev"]}

           :nrepl {:extra-paths ["dev"]
                   :extra-deps {nrepl/nrepl {:mvn/version "RELEASE"}
                                vvvvalvalval/scope-capture {:mvn/version "RELEASE"}
                                philoskim/debux {:mvn/version "RELEASE"}
                                cider/piggieback {:mvn/version "RELEASE"}
                                cider/cider-nrepl {:mvn/version "0.22.3"}
                                refactor-nrepl/refactor-nrepl {:mvn/version "2.5.0-SNAPSHOT"}}}

           :test {:extra-paths ["test"]
                  :extra-deps {com.cognitect/test-runner {:git/url "https://github.com/cognitect-labs/test-runner.git"
                                                          :sha "209b64504cb3bd3b99ecfec7937b358a879f55c1"}}
                  :main-opts ["-m" "cognitect.test-runner"]}

           :cljs {:extra-deps {org.clojure/clojurescript {:mvn/version "1.10.520"}
                               com.bhauman/figwheel-main {:mvn/version "RELEASE"}
                               cljs-http/cljs-http {:mvn/version "0.1.46"}
                               reagent/reagent {:mvn/version "0.8.1"}}
                  :extra-paths ["dev"]
                  :main-opts ["-m" "figwheel.main" "-b" "dev" "-r"]}

           :cljs-prod {:main-opts ["-m" "figwheel.main" "-bo" "prod"]}

           :depstar {:extra-deps
                     {seancorfield/depstar {:mvn/version "0.3.1"}}}

           :aot
           {:extra-paths ["target/classes"]
            :main-opts ["-e" "(binding[*compile-path*\"target/classes\"](compile,'org-analyzer.main))"]}}}
